getwd()
library(hakeRead)
fulldata_sh
names(fulldata_sh)
names(fulldata_sh$fit)
?admb.read
ls()
devtools::load_all()
?read.admb
library(hakeRead)
?read.admb
devtools::check()
devtools::check()
library(hakeRead)
library(hakeRead)
colpal=1
a=1
colrgb<-col2rgb(colpal)/255
colrgb
rgb(t(colrgb),alpha=a)
rgb(t(colrgb),alpha=a+1)
library(hakeRead)
library(hakeRead)
devtools::check()
colrgb<-col2rgb(colpal)/255
rgb(t(colrgb),alpha=a)
coo <- rgb(t(colrgb),alpha=a)
ret(coo)
return(coo)
library(hakeRead)
devtools::check()
devtools::load_all()
devtools::document()
library(hakeRead)
devtools::load_all()
devtools::document()
library(hakeRead)
devtools::document()
library(hakeRead)
?read.admb
devtools::check()
colr(1,0.5)
devtools::load_all()
devtools::document()
library(hakeRead)
?read.fit
devtools::check()
library(hakeRead)
?read.psv
devtools::check()
?col2rgb
?rgb
base::assign(".ptime", proc.time(), pos = "CheckExEnv")
library(hakeRead)
?read.admb
devtools::check()
?read.table
library(hakeRead)
devtools::check()
devtools::load_all()
devtools::document()
library(hakeRead)
?read.admb
devtools::check()
library(hakeRead)
?read.fit
devtools::check()
colr <-
function(colpal,a)
{
# require RColor
colrgb<-col2rgb(colpal)/255
coo <- rgb(t(colrgb),alpha=a)
return(coo)
}
colr(1,0.5)
colr <- function(colpal,a)
{
# require RColor
#colrgb<-col2rgb(colpal)/255
#coo <- rgb(t(colrgb),alpha=a)
coo <- colpal + a
return(coo)
}
colr(1,0.5)
library(hakeRead)
devtools::check()
?assign
library(hakeRead)
devtools::check()
?colr
search()
old <- search()
old
testthat::expect_equal(1, 1)
(testthat::expect_equal(1, 1))
setdiff(search(), old)
library(testthat)
expect_equal(1, 1)
setdiff(search(), old)
expect_true(TRUE)
(expect_true(TRUE))
`%||%` <- function(a, b) if (is.null(a)) b else a
1%||%5
9%||%5
NULL%||%5
2%||%NULL
devtools::document()
?lapply
?readBin
devtools::document()
library(hakeRead)
devtools::document()
devtools::document()
library(hakeRead)
?colorea
devtools::check()
?dput
?data
?devtools::use_data_raw
devtools::use_data_raw
library(hakeRead)
fulldata_sh
devtools::use_data_raw()
devtools::document()
library(hakeRead)
fulldata_sh
mod_2
devtools::load_all()
devtools::document()
library(hakeRead)
devtools::check()
fulldata_sh
library(hakeRead)
devtools::check()
library(hakeRead)
?read.fit
devtools::check()
library(hakeRead)
devtools::check()
devtools::check()
devtools::load_all(".")
library(hakeRead)
file.exists("~/.ssh/id_rsa.pub")
